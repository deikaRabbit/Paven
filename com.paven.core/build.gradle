plugins {
    id 'org.springframework.boot' version '1.5.9.RELEASE'
    id 'com.moowork.node' version '1.1.1'
}

node {
    version = '7.9.0'
    npmVersion = '5.0.2'
    download = true
    nodeModulesDir = file('web')
} 

description = 'core'
apply plugin: 'application'


// In this section you declare the dependencies for your production and test code
dependencies {
    compile ('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile 'org.springframework.boot:spring-boot-starter-jetty'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-mobile'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
    compile project(":com.paven.db")
    compile project(":com.paven.model")
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

run {
    main = 'com.paven.Application'
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = 'Compile client side assets for development'
    args = ['run', 'buildDev']
}

task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = 'Compile client side assets for production'
    args = ['run', 'build']
}

task buildWatch(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'application'
    description = 'Builds and watches the client side assets for rebuilding'
    args = ['run', 'buildWatch']
}

task clientTest(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'verification'
    description = 'Executes client side unit tests'
    args = ['run', 'test']
}

bootRun.dependsOn(buildClientDev)

jar.dependsOn(buildClient)